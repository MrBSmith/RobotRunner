[gd_scene load_steps=8 format=2]

[ext_resource path="res://Scenes/InteractiveObjects/Teleports/Sprites/Teleporters_SpriteSheet.png" type="Texture" id=1]
[ext_resource path="res://Scenes/InteractiveObjects/Teleports/BaseTeleporter.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Area2D

onready var layer_change_teleport_node : Node

onready var teleport_master_node = get_parent()

var teleporters_array : Array
var player_already_on_teleportarea : bool

func _ready():
	var _err
	_err = connect(\"body_entered\", self, \"on_body_entered\")
	_err = connect(\"body_exited\", self, \"on_body_exited\")
	
	# Get all the teleporters in the group
	teleporters_array = teleport_master_node.get_children()
	var teleport_index = get_index()
	
	# Get the next teleportarea node in the teleporters_array array
	var suiv = teleport_index + 1
	# If the next teleporter's index is superior than the last index of the array, we set the index to 0 (first teleportarea in the array)
	if suiv > len(teleporters_array) - 1:
		suiv = 0
	
	layer_change_teleport_node = teleporters_array[suiv]


# Whenever a character enters the area of this teleport, this method gives him the referecence to this node
func on_body_entered(body):
	if body.is_class(\"Player\") and body.teleport_node != self:
		body.teleport_node = self
		player_already_on_teleportarea = true


# Whenever a character exits the area of this teleport, set his teleport_node reference to null
func on_body_exited(body):
	if body.is_class(\"Player\"):
		var is_colliding = false
		
		# When the character get out of the area, check if it's because he left, or because he did teleport
		for teleporter in teleporters_array:
			if teleporter.overlaps_body(body) == true and teleporter != self:
				is_colliding = true
				player_already_on_teleportarea = false
		
		# If he left, set his teleport_node value to null
		if is_colliding == false:
			body.teleport_node = null
			player_already_on_teleportarea = false


# Teleport the player the the right destination teleporter
func teleport_layer(character : Node):
	
	# Get the size of the character's collision shape
	var y_offset = character.find_node(\"CollisionShape2D\").get_shape().get_extents().y
	var teleport_pos : Vector2 = character.global_position
	
	# Check if one player is already on the teleport or not
	if(!layer_change_teleport_node.player_already_on_teleportarea):
		teleport_pos = layer_change_teleport_node.global_position
	
	teleport_pos.y -= y_offset/10
	character.set_position(teleport_pos)
"

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 0, 48, 48, 24 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 48, 48, 48, 24 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 96, 48, 48, 24 )

[sub_resource type="SpriteFrames" id=5]
animations = [ {
"frames": [ SubResource( 2 ), SubResource( 3 ), SubResource( 4 ) ],
"loop": true,
"name": "BlueTP",
"speed": 10.0
} ]

[node name="BlueTeleporter" instance=ExtResource( 2 )]
script = SubResource( 1 )

[node name="AnimatedSprite" parent="." index="0"]
frames = SubResource( 5 )
animation = "BlueTP"
frame = 2
